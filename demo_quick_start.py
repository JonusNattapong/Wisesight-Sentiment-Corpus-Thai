#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Quick Demo: Detailed Thai Sentiment Analysis
‡∏Å‡∏≤‡∏£‡∏™‡∏≤‡∏ò‡∏¥‡∏ï‡∏£‡∏∞‡∏ö‡∏ö sentiment analysis ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
"""

def demo_quick_start():
    """Demo ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡πá‡∏ß"""
    print("üöÄ Quick Demo: Detailed Thai Sentiment Analysis")
    print("=" * 60)
    
    try:
        from detailed_thai_sentiment import DetailedThaiSentimentAnalyzer
        from sentiment_integration import analyze_detailed_sentiment
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á analyzer
        analyzer = DetailedThaiSentimentAnalyzer()
        
        # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö
        demo_texts = [
            "‡πÇ‡∏Å‡∏£‡∏ò‡∏à‡∏ô‡∏Ç‡∏≥‡∏≠‡∏∞! ‡∏ó‡∏≥‡πÑ‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡∏î‡πâ‡∏ß‡∏¢ 555 üò°üòÇ",
            "‡∏î‡∏µ‡πÉ‡∏à‡∏°‡∏≤‡∏Å‡πÄ‡∏•‡∏¢ ‡∏£‡∏±‡∏Å‡πÄ‡∏ò‡∏≠‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÄ‡∏•‡∏¢ ‚ù§Ô∏èüòç", 
            "‡∏≠‡πà‡∏≠... ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏à‡∏£‡∏¥‡∏á‡πÜ ‡πÄ‡∏ô‡∏≠‡∏∞ ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡∏µ‡∏°‡∏≤‡∏Å‡πÄ‡∏•‡∏¢ üôÑ",
            "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö ‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏õ‡∏Å‡∏ï‡∏¥‡∏î‡∏µ",
            "‡πÄ‡∏®‡∏£‡πâ‡∏≤‡πÉ‡∏à‡∏°‡∏≤‡∏Å ‡∏ú‡∏¥‡∏î‡∏´‡∏ß‡∏±‡∏á‡∏à‡∏£‡∏¥‡∏á‡πÜ üò¢üíî"
        ]
        
        print("\nüìç SINGLE-LABEL ANALYSIS (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å 1 ‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå):")
        print("-" * 50)
        
        for i, text in enumerate(demo_texts, 1):
            result = analyzer.analyze_single_label(text)
            print(f"{i}. ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: {text}")
            print(f"   ‚Üí ‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå: {result['label']} (‡∏Å‡∏•‡∏∏‡πà‡∏°: {result['group']})")
            print(f"   ‚Üí ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à: {result['confidence']:.3f} | ‡∏ö‡∏£‡∏¥‡∏ö‡∏ó: {result['context']}")
            print()
        
        print("\nüìç MULTI-LABEL ANALYSIS (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå):")
        print("-" * 50)
        
        for i, text in enumerate(demo_texts, 1):
            result = analyzer.analyze_multi_label(text, threshold=0.25)
            print(f"{i}. ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: {text}")
            print(f"   ‚Üí ‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå: {result['labels']} (‡∏Å‡∏•‡∏∏‡πà‡∏°: {result['groups']})")
            print(f"   ‚Üí ‡∏ö‡∏£‡∏¥‡∏ö‡∏ó: {result['context']}")
            print()
        
        print("\nüìç INTEGRATION MODULE (‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏î‡∏¥‡∏°):")
        print("-" * 50)
        
        for i, text in enumerate(demo_texts, 1):
            result = analyze_detailed_sentiment(text, mode="single", include_scores=True)
            print(f"{i}. ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: {text}")
            print(f"   ‚Üí Basic Sentiment: {result['sentiment']}")
            print(f"   ‚Üí Detailed Emotion: {result['detailed_emotion']} ({result['emotion_group']})")
            print(f"   ‚Üí Confidence: {result['confidence']:.3f}")
            print()
        
        print("‚úÖ Demo completed successfully!")
        print("\nüìö ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:")
        print("   ‚Ä¢ ‡∏£‡∏±‡∏ô: python example_detailed_sentiment.py")
        print("   ‚Ä¢ ‡∏£‡∏±‡∏ô: python test_detailed_sentiment.py")
        print("   ‚Ä¢ ‡∏≠‡πà‡∏≤‡∏ô: docs/DETAILED_SENTIMENT_README.md")
        
    except ImportError as e:
        print(f"‚ùå Error: {e}")
        print("\nüí° ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:")
        print("   1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå detailed_thai_sentiment.py ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô")
        print("   2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå sentiment_integration.py ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô")
        print("   3. ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á dependencies: pip install pandas tqdm")
        
    except Exception as e:
        print(f"‚ùå Unexpected error: {e}")

def demo_supported_emotions():
    """‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö"""
    print("\nüìù Supported Emotions (‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö):")
    print("=" * 60)
    
    try:
        from detailed_thai_sentiment import EMOTION_GROUPS
        
        for group, emotions in EMOTION_GROUPS.items():
            emoji = {
                "Positive": "üòä",
                "Negative": "üòî", 
                "Neutral": "üòê",
                "Others": "ü§î"
            }.get(group, "üìù")
            
            print(f"\n{emoji} {group}:")
            for emotion in emotions:
                print(f"   ‚Ä¢ {emotion}")
        
        print(f"\n‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {sum(len(emotions) for emotions in EMOTION_GROUPS.values())} ‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå")
        
    except ImportError:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡πÑ‡∏î‡πâ")

def demo_usage_examples():
    """‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"""
    print("\nüí° Usage Examples (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô):")
    print("=" * 60)
    
    examples = [
        {
            "title": "1. ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô",
            "code": """
from detailed_thai_sentiment import DetailedThaiSentimentAnalyzer

analyzer = DetailedThaiSentimentAnalyzer()
result = analyzer.analyze_single_label("‡∏î‡∏µ‡πÉ‡∏à‡∏°‡∏≤‡∏Å!")
print(result['label'])  # ‚Üí "‡∏î‡∏µ‡πÉ‡∏à"
"""
        },
        {
            "title": "2. ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏´‡∏•‡∏≤‡∏¢‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå",
            "code": """
result = analyzer.analyze_multi_label("‡πÇ‡∏Å‡∏£‡∏ò‡∏à‡∏ô‡∏Ç‡∏≥‡∏≠‡∏∞!", threshold=0.3)
print(result['labels'])  # ‚Üí ["‡πÇ‡∏Å‡∏£‡∏ò", "‡∏Ç‡∏≥‡∏Ç‡∏±‡∏ô"]
"""
        },
        {
            "title": "3. ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ Integration Module",
            "code": """
from sentiment_integration import analyze_detailed_sentiment

result = analyze_detailed_sentiment("‡πÄ‡∏™‡∏µ‡∏¢‡πÉ‡∏à‡∏°‡∏≤‡∏Å", mode="single")
print(f"Basic: {result['sentiment']}")      # ‚Üí "negative"
print(f"Detail: {result['detailed_emotion']}")  # ‚Üí "‡πÄ‡∏™‡∏µ‡∏¢‡πÉ‡∏à"
"""
        },
        {
            "title": "4. ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÅ‡∏ö‡∏ö Batch",
            "code": """
texts = ["‡∏î‡∏µ‡πÉ‡∏à", "‡πÇ‡∏Å‡∏£‡∏ò", "‡πÄ‡∏®‡∏£‡πâ‡∏≤"]
results = analyzer.analyze_batch(texts, multi_label=True)
stats = analyzer.get_emotion_statistics(results)
"""
        },
        {
            "title": "5. ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Training",
            "code": """
from detailed_thai_sentiment import create_training_data_format

# Single label
data = create_training_data_format("‡∏î‡∏µ‡πÉ‡∏à‡∏°‡∏≤‡∏Å", "‡∏î‡∏µ‡πÉ‡∏à", "classification")

# Multi label  
data = create_training_data_format("‡πÇ‡∏Å‡∏£‡∏ò‡∏à‡∏ô‡∏Ç‡∏≥", ["‡πÇ‡∏Å‡∏£‡∏ò", "‡∏Ç‡∏≥‡∏Ç‡∏±‡∏ô"], "classification")

# LLM format
data = create_training_data_format("‡∏õ‡∏£‡∏∞‡∏ä‡∏î‡πÄ‡∏Å‡πà‡∏á", "‡∏õ‡∏£‡∏∞‡∏ä‡∏î", "instruction")
"""
        }
    ]
    
    for example in examples:
        print(f"\n{example['title']}:")
        print(example['code'])

def demo_cli_usage():
    """‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Command Line"""
    print("\n‚ö° Command Line Usage (‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô CLI):")
    print("=" * 60)
    
    cli_examples = [
        {
            "desc": "Basic sentiment analysis",
            "cmd": "python app.py --sentiment-mode basic"
        },
        {
            "desc": "Enhanced sentiment (backward compatible)",  
            "cmd": "python app.py --sentiment-mode enhanced"
        },
        {
            "desc": "Detailed single-label analysis",
            "cmd": "python app.py --sentiment-mode detailed --detailed-mode single"
        },
        {
            "desc": "Detailed multi-label analysis",
            "cmd": "python app.py --sentiment-mode detailed --detailed-mode multi"
        },
        {
            "desc": "With privacy protection",
            "cmd": "python app.py --sentiment-mode detailed --privacy mask"
        },
        {
            "desc": "Custom input/output files",
            "cmd": "python app.py --links my_links.txt --output my_results.jsonl --sentiment-mode detailed"
        }
    ]
    
    for example in cli_examples:
        print(f"\n‚Ä¢ {example['desc']}:")
        print(f"  {example['cmd']}")

if __name__ == "__main__":
    # ‡∏£‡∏±‡∏ô demo ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    demo_quick_start()
    demo_supported_emotions()
    demo_usage_examples()
    demo_cli_usage()
    
    print("\nüéâ Demo ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢")
    print("\nüìñ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:")
    print("   ‚Ä¢ python example_detailed_sentiment.py (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô)")
    print("   ‚Ä¢ python test_detailed_sentiment.py (‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö)")
    print("   ‚Ä¢ docs/DETAILED_SENTIMENT_README.md (‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô)")
