#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Simplified demo for sentiment analysis system
"""

import sys
import os
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from sentiment_integration import analyze_detailed_sentiment, analyze_social_media_batch, get_sentiment_statistics

def main():
    print("üöÄ Thai Sentiment Analysis System Demo")
    print("=" * 50)
    
    # Core test cases
    test_cases = [
        # Basic cases
        ("‡∏î‡∏µ‡πÉ‡∏à‡∏°‡∏≤‡∏Å‡πÄ‡∏•‡∏¢ ‡∏£‡∏±‡∏Å‡πÄ‡∏ò‡∏≠‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÄ‡∏•‡∏¢ ‚ù§Ô∏èüòç", "positive"),
        ("‡∏´‡πà‡∏ß‡∏¢‡πÅ‡∏ï‡∏Å‡∏°‡∏≤‡∏Å ‡πÑ‡∏°‡πà‡∏ä‡∏≠‡∏ö‡πÄ‡∏•‡∏¢ üò°", "negative"),
        ("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô", "neutral"),
        
        # Sarcasm cases
        ("‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏à‡∏£‡∏¥‡∏á‡πÜ ‡πÄ‡∏ô‡∏≠‡∏∞ ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡∏µ‡∏°‡∏≤‡∏Å‡πÄ‡∏•‡∏¢ üôÑ", "negative"),
        ("‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ô‡∏∞‡∏Ñ‡∏∞‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏¢‡πà‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï üòä", "negative"),
        ("‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏™‡∏∏‡∏î‡∏¢‡∏≠‡∏î‡∏Ñ‡∏£‡∏±‡∏ö... ‡∏ñ‡πâ‡∏≤‡∏ä‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß", "negative"),
        
        # Mixed/Complex cases
        ("‡πÇ‡∏Å‡∏£‡∏ò‡∏à‡∏ô‡∏Ç‡∏≥‡∏≠‡∏∞! ‡∏ó‡∏≥‡πÑ‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡∏î‡πâ‡∏ß‡∏¢ 555 üò°üòÇ", "positive"),
        ("‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏≠‡∏£‡πà‡∏≠‡∏¢‡∏ô‡∏∞ ‡πÅ‡∏ï‡πà‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡πâ‡∏≤‡πÑ‡∏õ‡∏ô‡∏¥‡∏î‡∏ô‡∏∂‡∏á", "mixed"),
        ("‡∏ó‡∏≥‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ‡∏•‡∏á‡∏Ñ‡∏≠‡πÄ‡∏ô‡∏≠‡∏∞?", "negative"),
        ("‡∏™‡∏ß‡∏¢‡∏Ç‡∏ô‡∏≤‡∏î‡∏ô‡∏µ‡πâ ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏ä‡∏≠‡∏ö‡πÑ‡∏î‡πâ‡πÑ‡∏á", "positive"),
    ]
    
    print("\nüìç Single Label Analysis:")
    print("-" * 40)
    
    correct_predictions = 0
    total_tests = len(test_cases)
    
    for i, (text, expected) in enumerate(test_cases, 1):
        result = analyze_detailed_sentiment(text, mode="single")
        predicted = result['sentiment']
        
        # Check if prediction matches expected (allowing for mixed cases)
        is_correct = (predicted == expected) or (expected == "mixed")
        if is_correct:
            correct_predictions += 1
            status = "‚úÖ"
        else:
            status = "‚ùå"
        
        print(f"{i:2d}. {text}")
        print(f"    Expected: {expected} | Predicted: {predicted} | Confidence: {result['confidence']:.2f} {status}")
        print(f"    Detailed: {result['detailed_emotion']} ({result['emotion_group']})")
        print()
    
    accuracy = (correct_predictions / total_tests) * 100
    print(f"üìä Accuracy: {correct_predictions}/{total_tests} = {accuracy:.1f}%")
    
    # Test social media batch
    print("\nüì± Social Media Batch Test:")
    print("-" * 40)
    
    sample_comments = [
        {"text": "‡∏£‡∏±‡∏Å‡πÄ‡∏•‡∏¢ ‚ù§Ô∏è", "platform": "facebook"},
        {"text": "‡πÅ‡∏¢‡πà‡∏°‡∏≤‡∏Å ‡πÑ‡∏°‡πà‡∏ä‡∏≠‡∏ö", "platform": "twitter"},
        {"text": "‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏û‡∏¥‡πÄ‡∏®‡∏©", "platform": "youtube"},
        {"text": "‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏°‡∏≤‡∏Å... ‡∏ñ‡πâ‡∏≤‡∏ä‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß üôÑ", "platform": "instagram"}
    ]
    
    analyzed = analyze_social_media_batch(sample_comments, mode="single", show_progress=False)
    
    for comment in analyzed:
        sentiment_data = comment['sentiment_analysis']
        print(f"Platform: {comment['platform']}")
        print(f"Text: {comment['text']}")
        print(f"Result: {sentiment_data['sentiment']} | {sentiment_data['detailed_emotion']}")
        print()
    
    # Statistics
    stats = get_sentiment_statistics(analyzed)
    print("üìä Batch Statistics:")
    print(f"Total comments: {stats['total_comments']}")
    print(f"Sentiment distribution: {stats['sentiment_counts']}")
    
    print("\n‚úÖ Demo completed successfully!")

if __name__ == "__main__":
    main()
